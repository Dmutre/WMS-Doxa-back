version: '3.9'
services:
  api:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    command: ["sh", "-c", "pnpm run test:integration"]
    environment:
      NODE_ENV: test
      PORT: ${PORT}
      HOST: ${HOST}
      JWT_SECRET: ${JWT_SECRET}
      ACCESS_TTL: ${ACCESS_TTL}
      JWT_TTL: ${JWT_TTL}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: postgres
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_URL: "postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@postgres:${DATABASE_PORT}/${DATABASE_NAME}"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15.4
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./test/db/_data/postgres_init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USER}"]
      interval: 5s
      timeout: 10s
      retries: 5

  adminer:
    image: adminer:4.8.1
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - "8080:8080"
    depends_on:
      - postgres
